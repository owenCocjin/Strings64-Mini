[(str_buff:=''),(ok_chars:="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="),(base64:=__import__("base64")),(sys:=__import__("sys")),(path:=__import__("os").path),(str_len:=int(sys.argv[2]) if len(sys.argv)>2 and sys.argv[2].isdecimal() else 4),(eoe:=lambda:end+1 if len(str_buff)>((end:=str_buff.find('=')+1) if str_buff.find('=')>-1 else (end:=len(str_buff))) and str_buff[end]=='=' else end)]+[(str_buff:=chr(bool(print((str_buff+("  \033[92m["+f"{base64.b64decode(str_buff)}"[2:-1]+"]\033[0m" if len(str_buff)>=str_len and any((not len([c for c in str_buff[:eoe()] if c in ok_chars])%4, not len([c for c in str_buff[:eoe()] if c in ok_chars[:-1]])%4)) else '')+'\n') if len(str_buff)>=str_len else '',end='')))[0:0] if not 32<=menu<=126 else str_buff+chr(menu)) for menu in open((sys.argv[1] if len(sys.argv)>1 and path.exists(sys.argv[1]) else print("""string64.mini.py <file> [size]\nPrint all strings in a file, and base64 decode when possible\n  <file>: Target file\n  [size]: Min string length""")+exit(1)),'rb').read()+b'\x00']
